{"componentChunkName":"component---src-templates-docs-jsx-content-file-path-users-poly-3-dev-vui-guide-docs-docs-behaviour-freedom-of-user-control-mdx","path":"/docs/behaviour/freedom-of-user-control/","result":{"data":{"mdx":{"id":"5952abe8-0d92-56db-b100-225191e90de1","body":"\n\n![Freedom of user control.](/images/behaviour/freedomOfUserControl.png)\n\nUsing a computer is not difficult – if something did not work as intended, simply a click on cancel with the mouse or typing on the keyboard would normally solve the problem and everything would return to its original state. On conventional devices, you have always been able to cancel actions easily with the mouse and keyboard. You have complete control over the system.\n\nBut what happens if you don't have access to a mouse or keyboard? How do I cancel a purchase in an online shop? It will probably be near to impossible unless the screen responds to touch input – now let's get rid of the screen too – as expected there is no chance to control the system anymore.\n\nFortunately in a voice user interface, we can use voice for control. But especially when there are no screens and users can't see the voice interface, users may think that they have less control over the voice interface. This can be a real challenge as users can have problems undoing tasks or just being in control of the system.\n\n> Voice interfaces should not self determine, but rather listen to what the user wants.\n\nUsers want to feel responsible for the voice user interface at all times. Voice interfaces should not self determine, but rather listen to what the user wants. In various experiments, it was found that users felt rushed when interacting with the voice user interface and were not sure about the full scope of the interaction options, as these were never clearly communicated or simply do not exist. Keyboards are easy to understand because each time a key is pressed, a letter appears on the screen. Every user action corresponds to an immediate visual response. In contrast, voice interfaces tend to respond more slowly and often miss the user's intent. As a result, users have less control over the system. It is therefore more important than ever to inform the user of the options available.\n\n![Interface with examples of possible commands.](/images/behaviour/UserFreedomExamples.png)\n\n## Telling the user all options\n\nThere will always be cases where the user's intents are not interpreted right by the VUI. In this case it is a good idea to spelling out all available options in front of the user.\n\n![Simple abstract of how to handle user inputs.](/images/behaviour/tellingTheUserAllOptions.png)\n\n## Out-of-turn interaction\n\nExisting voice user interfaces are already trying to do this well by providing the user with an “out-of-turn interaction” word. It's basically just a simple stop command or keyword that users can use to end a task if they feel it's no longer relevant or necessary.\n\nUse of this keyword should interrupt the active interaction immediately, in other words, it will basically stop what is being done and/or ignore future dependent tasks and put the system back into sleep mode.\n\n![Using a easy to rememberable word to stop all actions.](/images/behaviour/outOfTurnCommand.png)\n","tableOfContents":{"items":[{"url":"#telling-the-user-all-options","title":"Telling the user all options"},{"url":"#out-of-turn-interaction","title":"Out-of-turn interaction"}]},"fields":{"timeToRead":{"minutes":2.41,"text":"3 min read","time":144600,"words":482}},"frontmatter":{"category":"behaviour","title":"Freedom of user control","navDocTitle":"Freedom of user control","toc":true}}},"pageContext":{"id":"5952abe8-0d92-56db-b100-225191e90de1","frontmatter":{"title":"Freedom of user control","navDocTitle":"Freedom of user control","slug":"/docs/behaviour/freedom-of-user-control/","category":"behaviour","sort":5,"toc":true}}},"staticQueryHashes":[],"slicesMap":{}}